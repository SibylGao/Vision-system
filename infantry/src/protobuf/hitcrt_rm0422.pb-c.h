/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: hitcrt_rm0422.proto */

#ifndef PROTOBUF_C_hitcrt_5frm0422_2eproto__INCLUDED
#define PROTOBUF_C_hitcrt_5frm0422_2eproto__INCLUDED

//#include <protobuf-c/protobuf-c.h>
//#include<protobuf-c.h>
#include"protobuf-c.h"
PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _MessageToCPU MessageToCPU;
typedef struct _MessageToMCU MessageToMCU;


/* --- enums --- */


/* --- messages --- */

struct  _MessageToCPU
{
  ProtobufCMessage base;
  /*
   *当前pitch
   */
  float current_pitch;
  int32_t function_select;
  /*
   *保留
   */
  float reserved_float1;
  /*
   *保留
   */
  float reserved_float2;
  /*
   *保留
   */
  int32_t reserved_int2;
  /*
   *保留
   */
  int32_t reserved_int3;
};
#define MESSAGE_TO__CPU__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message_to__cpu__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _MessageToMCU
{
  ProtobufCMessage base;
  /*
   *目标有无标志位
   */
  int32_t target_flag;
  /*
   *目标pitch
   */
  float aim_pitch;
  /*
   *目标yaw
   */
  float aim_yaw;
  /*
   *距离
   */
  float distance;
  /*
   *能量机关击打数字
   */
  int32_t buff_state;
  /*
   *给单片机发心跳包，证明视觉程序没死掉
   */
  int32_t heart_beat;
};
#define MESSAGE_TO__MCU__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message_to__mcu__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


/* MessageToCPU methods */
void   message_to__cpu__init
                     (MessageToCPU         *message);
size_t message_to__cpu__get_packed_size
                     (const MessageToCPU   *message);
size_t message_to__cpu__pack
                     (const MessageToCPU   *message,
                      uint8_t             *out);
size_t message_to__cpu__pack_to_buffer
                     (const MessageToCPU   *message,
                      ProtobufCBuffer     *buffer);
MessageToCPU *
       message_to__cpu__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message_to__cpu__free_unpacked
                     (MessageToCPU *message,
                      ProtobufCAllocator *allocator);
/* MessageToMCU methods */
void   message_to__mcu__init
                     (MessageToMCU         *message);
size_t message_to__mcu__get_packed_size
                     (const MessageToMCU   *message);
size_t message_to__mcu__pack
                     (const MessageToMCU   *message,
                      uint8_t             *out);
size_t message_to__mcu__pack_to_buffer
                     (const MessageToMCU   *message,
                      ProtobufCBuffer     *buffer);
MessageToMCU *
       message_to__mcu__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message_to__mcu__free_unpacked
                     (MessageToMCU *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MessageToCPU_Closure)
                 (const MessageToCPU *message,
                  void *closure_data);
typedef void (*MessageToMCU_Closure)
                 (const MessageToMCU *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor message_to__cpu__descriptor;
extern const ProtobufCMessageDescriptor message_to__mcu__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_hitcrt_5frm0422_2eproto__INCLUDED */
